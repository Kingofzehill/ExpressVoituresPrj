@model ExpressVoitures.Models.Vehicule

@{
    ViewData["Title"] = "Editer";
}

<h3>Editer Voiture</h3>

@* <h4>Voiture</h4> *@
<hr />
<div id="dropDownListdiv" class="row">
    <div class="col-md-4">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />            
            <div class="form-group">
                <label asp-for="Statut" class="control-label"></label>
                <input asp-for="Statut" class="form-control" value="@ViewData["Statut"]" />
                <span asp-validation-for="Statut" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Vin" class="control-label"></label>
                <input asp-for="Vin" class="form-control" />
                <span asp-validation-for="Vin" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AnneeVehicule" class="control-label"></label>
                @{
                    var myYear = ViewData["AnneeVehicule"];
                    if (myYear == null)
                    {
                        myYear = ViewData["AnneeMinimumVehicule"];
                    }
                    <input asp-for="AnneeVehicule" class="form-control" value="@myYear" />
                    <span asp-validation-for="AnneeVehicule" class="text-danger"></span>
                }
            </div>
            @* Marque and Modele dropdownlists with cascade updates.*@
            <div class="form-group">
                <label for="Modele">Marque</label><br>
                @{
                    if (ViewData["Marque"] != null)
                    {
                        var marqueSelectList = (SelectList)ViewData["Marque"];
                        List<SelectListItem> marqueSelectListItems = marqueSelectList.ToList();
                        marqueSelectListItems.Insert(0, (new SelectListItem { Text = "Sélectionner...", Value = "0", Selected = false }));
                        @Html.DropDownList("Marque", marqueSelectListItems, new { @class = "form-control" })
                    }
                }
            </div>
            <div class="form-group">
                <label for="Modele">Modele</label><br>
                @{
                    if (ViewData["Modele"] != null)
                    {
                        var modeleSelectList = (SelectList)ViewData["Modele"];
                        List<SelectListItem> modeleSelectListItems = modeleSelectList.ToList();
                        modeleSelectListItems.Insert(0, (new SelectListItem { Text = "Sélectionner...", Value = "0", Selected = false }));
                        @Html.DropDownList("Modele", modeleSelectListItems, new { @class = "form-control" })
                    }
                }
            </div>
            <div class="form-group">
                <label asp-for="FinitionId" class="control-label"></label>
                <select asp-for="FinitionId" class="form-control" asp-items="ViewBag.FinitionId">
                    <option value="0">Sélectionner...</option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Information" class="control-label"></label>
                <input asp-for="Information" class="form-control" />
                <span asp-validation-for="Information" class="text-danger"></span>
            </div>            
            <div class="form-group">
                <label asp-for="DateAchat" class="control-label"></label>
                <input asp-for="DateAchat" class="form-control" value="@ViewData["DateAchat"]" />                
                <span asp-validation-for="DateAchat" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DateMisEnVente" class="control-label"></label>                
                <input asp-for="DateMisEnVente" class="form-control" value="@ViewData["DateMisEnVente"]" />
                <span asp-validation-for="DateMisEnVente" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DateVente" class="control-label"></label>                
                <input asp-for="DateVente" class="form-control" value="@ViewData["DateVente"]" />
                <span asp-validation-for="DateVente" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PrixAchat" class="control-label"></label>
                <input asp-for="PrixAchat" class="form-control" />
                <span asp-validation-for="PrixAchat" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="listeReparations" class="control-label"></label>
                <input asp-for="listeReparations" class="form-control" />
                <span asp-validation-for="listeReparations" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CoutReparations" class="control-label"></label>
                <input asp-for="CoutReparations" class="form-control" />
                <span asp-validation-for="CoutReparations" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Marge" class="control-label"></label>
                @{
                    var myMargis = ViewData["Marge"];
                    if (myMargis == null)
                    {
                        myMargis = ViewData["MargeMinimum"];
                    }                    
                    <input asp-for="Marge" class="form-control" value="@myMargis" />
                    <span asp-validation-for="Marge" class="text-danger"></span>
                }
            </div>
            <div class="form-group">
                <label asp-for="PrixDeVente" class="control-label"></label>
                <input asp-for="PrixDeVente" class="form-control" />
                <span asp-validation-for="PrixDeVente" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Image.File" class="control-label"></label>
                @if (ViewData["Image"] != null)
                {
                    Image myImage = (Image)ViewData["Image"];
                    <span>(<a target="_blank" href="@Url.Content($"~/{myImage.Path}")">@myImage.Name</a>)</span>
                }
                <input type="file" asp-for="Image.File" class="form-control" />
                <span asp-validation-for="Image.File" class="text-danger"></span>
            </div>      
            <div>&nbsp;
            </div>
            <div class="form-group d-grid gap-2 col-6 mx-auto">
                @{
                    var myActionToSale = (bool)ViewData["ActionEnVente"];
                    var myActionSold = (bool)ViewData["ActionVendu"];
                    var myActionAvailabilty = (int)ViewData["ActionDisponibilite"];

                    <input type="submit" value="Sauvegarder" class="btn btn-success btn-sm btn-block" />

                    if (myActionToSale == true)
                    {
                        var myCarId = Model.Id;
                        <a asp-action="SetCarToSell" class="btn btn-warning btn-sm btn-block" asp-route-id="@myCarId">Mettre en vente</a>
                    }
                    if (myActionSold == true)
                    {
                        var myCarId = Model.Id;
                        <a asp-action="SetCarSold" class="btn btn-warning btn-sm btn-block" asp-route-id="@myCarId">Vendu</a>
                    }
                    if (myActionAvailabilty > 0)
                    {
                        var myCarId = Model.Id;
                        if (myActionAvailabilty == 1)
                        {
                            <a asp-action="SetCarUnavailable" class="btn btn-info btn-sm btn-block" asp-route-id="@myCarId">Non disponible</a>
                        }
                        else
                        {
                            <a asp-action="SetCarAvailable" class="btn btn-info btn-sm btn-block" asp-route-id="@myCarId">Disponible</a>
                        }

                    }
                }
                <a asp-action="Index" class="btn btn-outline-dark btn-sm">Liste des Voitures</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        @* Statut dropdownlist readonly.*@
        $("#Statut").attr("readonly", "readonly");

        $(function () {
            $("#dropDownListdiv").on("change", "select", function () {
                var value = $(this).val();
                var id = $(this).attr("id");
                //debugger;
                if (id != "Statut") {
                    $.post("@Url.Action("setDropDrownList")", { type: id, value: value }, function (data) {
                        switch (id) {
                            case "Marque":                                
                                PopulateDropDown("#Modele", data);
                                PopulateDropDown("#FinitionId", data);
                                break;
                            case "Modele":                                
                                PopulateDropDown("#Marque", data);
                                PopulateDropDown("#FinitionId", data);
                                break;
                            case "ModeleId":                                
                                PopulateDropDown("#Marque", data);
                                PopulateDropDown("#FinitionId", data);
                                break;
                        }
                    });
                }
            });
        });
        function PopulateDropDown(dropDownId, list) {
            $(dropDownId).empty();
            $(dropDownId).append("<option>Sélectionner...</option>");
            //debugger;
            $.each(list, function (index, row) {
                $(dropDownId).append($('<option/>')
                    .val(row.value)
                    .text(row.text)
                    .attr("selected", row.selected)
                )
            });
        }

        // FIX13 JQuery client side validation rule for managing
        // comma as decimal separator (the regex swaps the dot and comma)
        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:\.\d{3})+)?(?:,\d+)?$/.test(value);
        }
    </script>
}
